Q1>
module decoder(input [2:0]s, output [7:0]d, output f1, output f2, output f3);
assign d[0] = (~s[0] & ~s[1] & ~s[2]),
       d[1] = (~s[0] & ~s[1] & s[2]),
       d[2] = (~s[0] & s[1] & ~s[2]),
       d[3] = (~s[0] & s[1] & s[2]),
       d[4] = (s[0] & ~s[1] & ~s[2]),
       d[5] = (s[0] & ~s[1] & s[2]),
       d[6] = (s[0] & s[1] & ~s[2]),
       d[7] = (s[0] & s[1] & s[2]);
assign f1 = ~(d[2]&d[4]&d[7]);
assign f2 = ~(d[0]&d[3]); 
assign f3 = ~(d[1]&d[5]&d[6]);
endmodule


#testbench
module decoder_tb;
reg a;
reg b; 
reg c;
wire d0;
wire d1;
wire d2;
wire d3;
wire d4;
wire d5;
wire d6;
wire d7;
wire f1;
wire f2;
wire f3;
decoder uut(.s({a,b,c}), .d({d0,d1,d2,d3,d4,d5,d6,d7}), .f1(f1), .f2(f2),.f3(f3));
initial begin
a=0;b=0;c=0;
#100;
a=0;b=0;c=1;
#100;
a=0;b=1;c=0;
#100;
a=0;b=1;c=1;
#100;
a=1;b=0;c=0;
#100;
a=1;b=0;c=1;
#100;
a=1;b=1;c=0;
#100;
a=1;b=1;c=1;
#100;
end
endmodule
